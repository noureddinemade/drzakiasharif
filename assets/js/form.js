const contactForm=document.querySelector("form"),contactFormInputs=contactForm.querySelectorAll("input, select, textarea"),formName=contactForm.querySelector(".-name"),formNameInput=formName.querySelector("input"),formContactPref=contactForm.querySelector(".-contactPref"),formContactPrefPhone=formContactPref.querySelector("#radioPhone"),formContactPrefEmail=formContactPref.querySelector("#radioEmail"),formEmail=contactForm.querySelector(".-email"),formEmailInput=formEmail.querySelector("input"),formPhone=contactForm.querySelector(".-phone"),formPhoneInput=formPhone.querySelector("input"),formReason=contactForm.querySelector(".-reason"),formReasonSelect=formReason.querySelector("select"),formPreferredTime=contactForm.querySelector(".-preferredTime"),formPreferredTimeAM=formPreferredTime.querySelector("#radioAM"),formPreferredTimePM=formPreferredTime.querySelector("#radioPM"),formMessage=contactForm.querySelector(".-message"),formMessageInput=formMessage.querySelector("textarea"),formButton=contactForm.querySelector("button"),readyToSubmit=()=>{let e=!1;return contactFormInputs.forEach(r=>{"text"==r.type&&(r.value?formNameInput.classList.remove("-error"):(formNameInput.classList.add("-error"),e=!0)),"radio"==r.type&&(r.checked?(r.classList.remove("-error"),"Phone"==r.value?formPhoneInput.value?formPhoneInput.classList.remove("-error"):(formPhoneInput.classList.add("-error"),e=!0):"Email"==r.value&&(formEmailInput.value?formEmailInput.classList.remove("-error"):(formEmailInput.classList.add("-error"),e=!0))):(r.classList.add("-error"),e=!0))}),e};formContactPrefPhone.addEventListener("click",()=>{formEmail.style.display="none",formEmail.querySelector("input").required=!1,formPhone.style.display="block",formPhone.querySelector("input").required=!0}),formContactPrefEmail.addEventListener("click",()=>{formPhone.style.display="none",formPhone.querySelector("input").required=!1,formEmail.style.display="block",formEmail.querySelector("input").required=!0}),formReasonSelect.addEventListener("change",()=>{let e=formPreferredTime.querySelectorAll("input");"General enquiry"==formReasonSelect.value?(formPreferredTime.style.display="none",e.forEach(e=>{e.required=!1,e.checked=!1})):(formPreferredTime.style.display="block",e.forEach(e=>{e.required=!0}))}),contactFormInputs.forEach(e=>{"text"==e.type||"email"==e.type||"number"==e.type?e.addEventListener("keyup",()=>{readyToSubmit()}):e.addEventListener("change",()=>{})}),formButton.addEventListener("click",e=>{e.preventDefault();let r=readyToSubmit();console.log(r)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
